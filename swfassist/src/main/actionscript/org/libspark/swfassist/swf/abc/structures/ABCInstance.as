/* * The Spark Project ( http://libspark.org ) * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,  * either express or implied. See the License for the specific language * governing permissions and limitations under the License. * * The Original Code is [Open Source Virtual Machine.]. * * The Initial Developer of the Original Code is Adobe System Incorporated. * Portions created by the Initial Developer are Copyright (C) 2004-2006 * the Initial Developer. All Rights Reserved. * * Contributor(s): * * Adobe AS3 Team * Mateusz Malczak ( http://segfaultlabs.com ) * Daniel Riley	 ( http://scientificsciences.com ) */package org.libspark.swfassist.swf.abc.structures{		import org.libspark.swfassist.swf.abc.consts.ABCConsts;		/**	 * This class describes a single Action Script 3 class, or more precisely a single class instance. ABCInstance	 * stores information about all non static properties and methods of the class. Static properties and methods	 * are stored in ABCClass obejct, that can be accessed using the cref property of ABCInstance. ABCInstance 	 * together with related ABCClass are fully describing single Action Script class, including information 	 * about metadata related with clas and/or with properties.  	 * 	 */ 		final public class ABCInstance extends ABCTraits	{		public var name 		:ABCMultinameInfo;		public var base		 	:ABCMultinameInfo;				/* [ CONSTANT_ClassSealed | CONSTANT_ClassFinal | CONSTANT_ClassInterface | CONSTANT_ClassProtededNs ]  */		private var _flags 		:uint;		/* if ( flags | CONSTANT_ClassProtectedNs ) */		public var protectedNs  :ABCNamespace; 				private var _interfaces 	:Vector.<ABCMultinameInfo>;						private var _class	:ABCClass;				public function ABCInstance():void		{			_traits = null;		}				public function get interfaces():Vector.<ABCMultinameInfo>		{			if( _interfaces == null )				_interfaces = new Vector.<ABCMultinameInfo>();							return _interfaces;		}				public function set interfaces( i:Vector.<ABCMultinameInfo> )		{			_interfaces = i;		}				public function get flags():uint		{			return _flags;		}				public function set flags( value:uint )		{			_flags = value;		}				public function get classRef():ABCClass		{			return _class;		}				public function set classRef( value:ABCClass ):void		{			_class = value;		}				public override function set init( value:ABCMethodInfo ):void		{			_init = value;			_init.name = name; /* constructor */			_init.kind = ABCConsts.TRAIT_Method;		}					}	}