/* * Copyright(c) 2009 Dan Riley * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,  * either express or implied. See the License for the specific language * governing permissions and limitations under the License. */package org.libspark.swfassist.swf.abc.validators{		import org.libspark.swfassist.swf.abc.opcode.ABCOpState;	import org.libspark.swfassist.swf.abc.opcode.ABCPatch;		public interface IABCValidator	{		/**		 * Takes the state of the patcher and a reference to a patch object, and figures out 		 * if the bytecode needs to be patched. If it does, it fills the patch object and 		 * returns true, otherwise it returns false.		 *		 * @param state The state of the patcher inside the method code (position, bytearray, etc.)		 * @param patch	A pointer to a reference object if we need to fill it with data		 * @return True if a patch is necessary, otherwise false		 */		function validate(state:ABCOpState, patch:ABCPatch):Boolean;		function get historyLength():uint;	}}